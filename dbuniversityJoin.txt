1. Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia

    SELECT * 
    FROM `students`
    INNER JOIN `degrees`
    ON degrees.id = students.degree_id
    WHERE degrees.name = 'Corso di Laurea in Economia';

2. Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di
Neuroscienze

    SELECT * 
    FROM `degrees`
    INNER JOIN `departments`
    ON departments.id = degrees.department_id
    WHERE degrees.level = 'magistrale' 
    AND departments.name = 'Dipartimento di Neuroscienze';

3. Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)

    SELECT *
    FROM `course_teacher` 
    INNER JOIN `courses`
    ON courses.id = course_teacher.course_id
    WHERE `teacher_id` = 44;

4. Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui
sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e
nome

    SELECT DISTINCT students.name, students.surname, degrees.name AS degree_name ,departments.name AS department_name
    FROM `students`
    INNER JOIN `degrees`
    ON degrees.id = students.degree_id
    INNER JOIN `departments`
    ON departments.id = degrees.department_id
    ORDER BY students.name, students.surname;


5. Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti

    SELECT *
    FROM `courses`
    INNER JOIN `degrees`
    ON degrees.id = courses.degree_id
    INNER JOIN `course_teacher`
    ON course_teacher.course_id = courses.id
    INNER JOIN `teachers`
    ON teachers.id = course_teacher.teacher_id;


6. Selezionare tutti i docenti che insegnano nel Dipartimento di
Matematica (54)

    SELECT DISTINCT teachers.name,teachers.surname, departments.name AS department_name
    FROM `courses`
    INNER JOIN `degrees`
    ON degrees.id = courses.degree_id
    INNER JOIN `course_teacher`
    ON course_teacher.course_id = courses.id
    INNER JOIN `teachers`
    ON teachers.id = course_teacher.teacher_id
    INNER JOIN `departments`
    ON departments.id = degrees.department_id
    WHERE departments.name = 'Dipartimento di Matematica';

7. BONUS: Selezionare per ogni studente il numero di tentativi sostenuti
per ogni esame, stampando anche il voto massimo. Successivamente,
filtrare i tentativi con voto minimo 18.

    SELECT students.name,students.surname,exams.id AS exam_id,MAX(exam_student.vote) AS max_vote
    FROM exam_student
    INNER JOIN exams 
    ON exams.id = exam_student.exam_id
    INNER JOIN students 
    ON students.id = exam_student.student_id
    GROUP BY students.id, students.name, students.surname, exams.id
    ORDER BY students.name;


    SELECT students.name,students.surname,exams.id AS exam_id,MAX(exam_student.vote) AS max_vote
    FROM exam_student
    INNER JOIN exams 
    ON exams.id = exam_student.exam_id
    INNER JOIN students 
    ON students.id = exam_student.student_id
    GROUP BY students.id, students.name, students.surname, exams.id
    HAVING max_vote > 18
    ORDER BY students.name;